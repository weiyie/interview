"use strict";(self.webpackChunkinterview_weiyie=self.webpackChunkinterview_weiyie||[]).push([[445],{6299:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-450b3517",path:"/pages/5dde351274f1e39d/",title:"如何根据系统主题自动响应CSS深色模式",lang:"zh-CN",frontmatter:{title:"如何根据系统主题自动响应CSS深色模式",date:"2020-03-31T14:06:26.000Z",permalink:"/pages/5dde351274f1e39d",sticky:1,categories:["页面","CSS"],tags:["css"],author:{name:"weiyie",link:"https://github.com/weiyie"}},excerpt:'<h1 id="如何根据系统主题自动响应css深色模式" tabindex="-1"><a class="header-anchor" href="#如何根据系统主题自动响应css深色模式" aria-hidden="true">#</a> 如何根据系统主题自动响应CSS深色模式</h1>\n<p align="center">\n  <img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200427163531.jpg" width="500">\n</p>\n<p>很多人喜欢选择APP或网站中的深色模式，也许他们更喜欢这样的外观，或者他们想让自己的眼睛免受疲劳。这篇文章将告诉你如何在网站中实现一个自动的CSS深色模式，根据访客的系统主题来自动响应。</p>\n',headers:[{level:2,title:"CSS 深色模式 (Dark Mode)",slug:"css-深色模式-dark-mode",children:[]},{level:2,title:"添加深色模式自动响应",slug:"添加深色模式自动响应",children:[]},{level:2,title:"JS判断深色模式",slug:"js判断深色模式",children:[]},{level:2,title:"结论",slug:"结论",children:[]}],filePathRelative:"02.页面/20.CSS/45.如何根据系统主题自动响应CSS深色模式.md",git:{updatedTime:1634741038e3,contributors:[{name:"wb-wzc589583",email:"wb-wzc589583@alibaba-inc.com",commits:1}]}}},6136:(n,s,a)=>{a.r(s),a.d(s,{default:()=>x});var e=a(6252);const p=(0,e.uE)('<h1 id="如何根据系统主题自动响应css深色模式" tabindex="-1"><a class="header-anchor" href="#如何根据系统主题自动响应css深色模式" aria-hidden="true">#</a> 如何根据系统主题自动响应CSS深色模式</h1><p align="center"><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200427163531.jpg" width="500"></p><p>很多人喜欢选择APP或网站中的深色模式，也许他们更喜欢这样的外观，或者他们想让自己的眼睛免受疲劳。这篇文章将告诉你如何在网站中实现一个自动的CSS深色模式，根据访客的系统主题来自动响应。</p><h2 id="css-深色模式-dark-mode" tabindex="-1"><a class="header-anchor" href="#css-深色模式-dark-mode" aria-hidden="true">#</a> CSS 深色模式 (Dark Mode)</h2><p>在<code>:root</code>根元素中定义变量来设置主题的颜色。我建议你也这样做，因为这样会使这个过程容易得多。我定义的变量如下:</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">:root</span> <span class="token punctuation">{</span>\n  <span class="token property">--bg</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n  <span class="token property">--textColor</span><span class="token punctuation">:</span> #004050<span class="token punctuation">;</span>\n  <span class="token property">--borderColor</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.15<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p><strong><code>:root</code></strong> 这个 CSS 伪类匹配文档树的根元素。对于 HTML 来说，<strong><code>:root</code></strong> 表示 <code>&lt;html&gt;</code>元素，除了优先级更高之外，与 <code>html</code> 选择器相同。</p></blockquote><p>如果希望在样式表中使用这些变量，可以这样做</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">body</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--bg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这样，如果你想改变你的主题颜色，所需要做的就是修改你定义的变量，所有使用这个变量的样式都会被更新。</p><p>现在我们需要定义一组新的变量，这些变量将在调用CSS深色模式时使用。对我来说，深色模式的变量是这样的:</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/* 定义深色模式的颜色 */</span>\n<span class="token selector">:root</span> <span class="token punctuation">{</span>\n  <span class="token property">--bg</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>30<span class="token punctuation">,</span>30<span class="token punctuation">,</span>34<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token property">--textColor</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>150<span class="token punctuation">,</span>150<span class="token punctuation">,</span>154<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token property">--borderColor</span><span class="token punctuation">:</span> #2C2C3A<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="添加深色模式自动响应" tabindex="-1"><a class="header-anchor" href="#添加深色模式自动响应" aria-hidden="true">#</a> 添加深色模式自动响应</h2><p>现在我们定义了两组变量。剩下要做的一件事就是将<code>prefers-color-scheme</code>媒体查询添加到我们的深色模式变量中。</p><p>使用您的深色模式变量并在外层添加<code>@media</code>查询</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/* 根据系统的深色模式响应深色变量 */</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">prefers-color-scheme</span><span class="token punctuation">:</span> dark<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n  <span class="token selector">:root</span> <span class="token punctuation">{</span>\n    <span class="token property">--bg</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>30<span class="token punctuation">,</span>30<span class="token punctuation">,</span>34<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">--textColor</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>150<span class="token punctuation">,</span>150<span class="token punctuation">,</span>154<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">--borderColor</span><span class="token punctuation">:</span> #2C2C3A<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',16),t={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media/prefers-color-scheme",target:"_blank",rel:"noopener noreferrer"},c=(0,e._)("code",null,"prefers-color-scheme",-1),o=(0,e.Uk)("文档"),l=(0,e.uE)('<p>这是真的! 如果有人正在使用一个深色模式的系统主题，并访问你的网站，将自动切换到深色模式。</p><blockquote><p>如果你的电脑系统不支持深色模式，可以使用手机测试，先把手机的系统主题调到深色模式，再打开你的网站。</p></blockquote><h2 id="js判断深色模式" tabindex="-1"><a class="header-anchor" href="#js判断深色模式" aria-hidden="true">#</a> JS判断深色模式</h2><p>如果你的需求需要js来判断系统是否处于深色模式，可以这样做：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: dark)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token comment">//深色主题</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',5),u={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/matchMedia",target:"_blank",rel:"noopener noreferrer"},r=(0,e._)("code",null,"matchMedia",-1),i=(0,e.Uk)("方法返回一个"),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MediaQueryList",target:"_blank",rel:"noopener noreferrer"},d=(0,e._)("code",null,"MediaQueryList",-1),b=(0,e.Uk)("对象，该对象具有属性"),m=(0,e._)("code",null,"matches",-1),h=(0,e.Uk)("、"),g=(0,e._)("code",null,"media",-1),f=(0,e.Uk)("，具有方法"),v=(0,e._)("code",null,"addListener",-1),y=(0,e.Uk)("、"),C=(0,e._)("code",null,"removeListener",-1),S=(0,e.Uk)("。"),w=(0,e.uE)('<p><code>addListener</code>接收一个<code>MediaQueryList</code>对象作为参数。 为深色模式添加监听器，以响应系统切换到或切换出深色模式：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> listeners<span class="token operator">=</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">dark</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">mediaQueryList</span> <span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>mediaQueryList<span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">{</span>\n      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;您切换到深色模式了！&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">light</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">mediaQueryList</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>mediaQueryList<span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">{</span>\n      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;您切换到浅色模式了！&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nwindow<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: dark)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>listeners<span class="token punctuation">.</span>dark<span class="token punctuation">)</span>\nwindow<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: light)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>listeners<span class="token punctuation">.</span>light<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="结论" tabindex="-1"><a class="header-anchor" href="#结论" aria-hidden="true">#</a> 结论</h2><p>我们不仅可以在布局方面响应不同尺寸屏幕，还可以按系统主题响应深色模式。我相信你的深夜访客，或者那些喜欢深色模式的人，会感谢你的。</p>',4),_={},x=(0,a(3744).Z)(_,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("blockquote",null,[(0,e._)("p",null,[(0,e._)("a",t,[c,o,(0,e.Wm)(a)])])]),l,(0,e._)("blockquote",null,[(0,e._)("p",null,[(0,e._)("a",u,[r,(0,e.Wm)(a)]),i,(0,e._)("a",k,[d,(0,e.Wm)(a)]),b,m,h,g,f,v,y,C,S])]),w],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);