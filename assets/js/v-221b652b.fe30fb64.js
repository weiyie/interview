"use strict";(self.webpackChunkinterview_weiyie=self.webpackChunkinterview_weiyie||[]).push([[624],{5275:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-221b652b",path:"/%E9%9D%A2%E7%BB%8F/%E9%9D%A2%E7%BB%8F%E6%B1%87%E6%80%BB.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"字节一面",slug:"字节一面",children:[{level:3,title:"1. bind实现",slug:"_1-bind实现",children:[]},{level:3,title:"2. 打印输出",slug:"_2-打印输出",children:[]},{level:3,title:"3. 最长不重复子串",slug:"_3-最长不重复子串",children:[]}]}],filePathRelative:"面经/面经汇总.md",git:{updatedTime:1636355519e3,contributors:[{name:"weiyie",email:"912881342@qq.com",commits:1}]}}},8386:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h2 id="字节一面" tabindex="-1"><a class="header-anchor" href="#字节一面" aria-hidden="true">#</a> 字节一面</h2><h3 id="_1-bind实现" tabindex="-1"><a class="header-anchor" href="#_1-bind实现" aria-hidden="true">#</a> 1. bind实现</h3><h3 id="_2-打印输出" tabindex="-1"><a class="header-anchor" href="#_2-打印输出" aria-hidden="true">#</a> 2. 打印输出</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">a</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>\n <span class="token punctuation">}</span><span class="token punctuation">;</span>\n <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n <span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n c<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>b<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_3-最长不重复子串" tabindex="-1"><a class="header-anchor" href="#_3-最长不重复子串" aria-hidden="true">#</a> 3. 最长不重复子串</h3>',5),t={},p=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);